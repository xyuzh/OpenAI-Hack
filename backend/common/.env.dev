# ===================================================================
# 环境特定配置 - 本地开发环境
# ===================================================================
# 环境标识
ENV=dev

# ===================================================================
# RabbitMQ连接配置
# ===================================================================
# RabbitMQ服务器连接协议
RABBITMQ_PROTOCOL=amqps
# RabbitMQ服务器HOST
RABBITMQ_HOST=
# RabbitMQ AMQPS端口
RABBITMQ_PORT=5671
# RabbitMQ连接用户名
RABBITMQ_USERNAME=
# RabbitMQ连接密码
RABBITMQ_PASSWORD=

# ===================================================================
# Celery队列配置
# ===================================================================
# 主交换机名称
CELERY_EXCHANGE=usebase.agent.celery.task.exchange
# 主队列名称
CELERY_QUEUE=usebase.agent.celery.task.queue
# 路由键
CELERY_ROUTING_KEY=usebase.agent.celery.task
# 死信交换机
CELERY_DL_EXCHANGE=usebase.agent.celery.task.dl.exchange
# 死信路由键
CELERY_DL_ROUTING_KEY=usebase.agent.celery.task.dl
# 控制交换机
CELERY_CONTROL_EXCHANGE=usebase.agent.celery.control.exchange
# 事件交换机
CELERY_EVENT_EXCHANGE=usebase.agent.celery.event.exchange
# 是否自动创建缺失的队列
CELERY_TASK_CREATE_MISSING_QUEUES=false
# 消息在队列中的存活时间(毫秒)
CELERY_MESSAGE_TTL=1800000

# ===================================================================
# Celery Worker配置
# ===================================================================
# 工作进程数
CELERY_WORKER_CONCURRENCY=2
# 预取任务数量乘数
CELERY_WORKER_PREFETCH_MULTIPLIER=1
# 每个子进程处理多少个任务后重启
CELERY_WORKER_MAX_TASKS_PER_CHILD=100
# 任务执行超时时间(秒)
CELERY_TASK_TIME_LIMIT=1800
# 任务执行软超时时间(秒)
CELERY_TASK_SOFT_TIME_LIMIT=1800

# ===================================================================
# AWS APP SYNC配置
# ===================================================================
# AWS AppSync HTTP域名
AWS_APP_SYNC_HTTP_DOMAIN=i26g32xusnfg5nnnl7mh3jonca.appsync-api.us-west-1.amazonaws.com
# AWS AppSync WebSocket域名
AWS_APP_SYNC_WEBSOCKET_DOMAIN=i26g32xusnfg5nnnl7mh3jonca.appsync-realtime-api.us-west-1.amazonaws.com
# AWS AppSync API密钥
AWS_APP_SYNC_API_KEY=

# ===================================================================
# Workflow配置
# ===================================================================
# Anthropic API密钥
ANTHROPIC_API_KEY=
# OpenAI API密钥
OPENAI_API_KEY=
# EXA(网络爬虫) API密钥
EXA_API_KEY=
# Daytona API密钥
DAYTONA_API_KEY=
# Daytona 沙盒服务URL
DAYTONA_SERVER_URL=https://app.daytona.io/api
# Daytona 沙盒目标区域
DAYTONA_SANDBOX_TARGET=us
# E2B API密钥
E2B_API_KEY=
# LangSmith 追踪
LANGSMITH_TRACING=true
# LangSmith 追踪端点
LANGSMITH_ENDPOINT="https://api.smith.langchain.com"
# LangSmith 追踪项目
LANGSMITH_PROJECT="usebase-agent-root"
# LangSmith API密钥
LANGSMITH_API_KEY=
# LangFuse 追踪公钥
LANGFUSE_PUBLIC_KEY=
# LangFuse 追踪私钥
LANGFUSE_SECRET_KEY=
# LangFuse 追踪主机
LANGFUSE_HOST=https://us.cloud.langfuse.com

# ===================================================================
# USEBASE_SERVER_BOOT配置
# ===================================================================
# 内部通讯API-KEY
USEBASE_INTERNAL_API_KEY=
# 内部通讯API-BASE_URL
USEBASE_SERVER_BOOT_BASE_URL=https://api.fusion.new

# ===================================================================
# Redis配置
# ===================================================================
# Redis主机
REDIS_HOST=
# Redis端口
REDIS_PORT=6379
# Redis用户名
REDIS_USERNAME=
# Redis密码
REDIS_PASSWORD=
# Redis数据库
REDIS_DB=0

# ===================================================================
# POSTGRESQL配置
# ===================================================================
# POSTGRESQL主机
POSTGRESQL_DATASOURCE_HOST=
# POSTGRESQL端口
POSTGRESQL_DATASOURCE_PORT=5432
# POSTGRESQL用户名
POSTGRESQL_DATASOURCE_USERNAME=
# POSTGRESQL密码
POSTGRESQL_DATASOURCE_PASSWORD=
# POSTGRESQL langChain State 数据库
POSTGRESQL_LANGCHAIN_STATE_DATABASE_NAME=usebase_dev_agent_langchain_state

# ===================================================================
# MongoDB配置
# ===================================================================
# MongoDB主机
MONGODB_DATASOURCE_URL=

# ===================================================================
# Logging配置
# ===================================================================
# 日志级别
LOGGING_LEVEL=DEBUG